package com.viettel.it.model;

// Generated Sep 8, 2016 5:07:30 PM by Hibernate Tools 4.0.0

import com.viettel.it.object.GroupAction;
import com.viettel.it.object.TbsNodeObj;
import com.viettel.model.CatCountryBO;
import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;

import javax.persistence.*;
import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;

import static javax.persistence.GenerationType.SEQUENCE;

/**
 * Node generated by hbm2java
 */
@Entity
@Table(name = "NODE")
public class Node implements java.io.Serializable {

	private Long nodeId;
	private Vendor vendor;
	private NodeType nodeType;
	private String nodeCode;
	private String nodeIp;
    private String jdbcUrl;
    private Integer port;
    private String osType;
	
	/**
	 * For export
	 */
	private List<ActionOfFlow> actionOfFlows = new ArrayList<ActionOfFlow>(0);
	
//	private List<NodeRun> nodeRuns = new ArrayList<NodeRun>(0);
	
	private List<GroupAction> groupActions = new LinkedList<GroupAction>();
	private Version version;
	
	private String subnetwork;
	private String networkType;
	private Integer isLab = 0;
	private String provinceCode;
	private Long status = 1L;
	private String nodeName;
	private String serviceName;
	private String nodeIpVirtual;
	private Date impactTime;
	private Date addParTime;
	private Date addTbsTime;
	private Date addDatafileTime;
	private Date dropParTime;
	private Date resizeTbsTime;
	private Date exportTbsTime;
	private Long dbNodeId;
	private String userManager;
	private Long itBusinessNode; // 1 -> it business node
	
	// hanhnv68 add 20161019
	private String flag;
	private List<String> lstInterface = new ArrayList<>();
	private String stationCode;
	private String departmentName;
    private String effectIp;
    private Long serverId;
    private NodeAccount nodeAccount;
    private Boolean isNodeLab;

    // for add datafile
    private List<TbsNodeObj> lstTbsObj;

	// end hanhnv68 add 20161019

	//20180614_thenv_Start
	private CatCountryBO countryCode;

	@ManyToOne(fetch = FetchType.EAGER)
	@LazyCollection(LazyCollectionOption.EXTRA)
	@JoinColumn(name = "COUNTRY_CODE")
	public CatCountryBO getCountryCode() {
		return this.countryCode;
	}
	public void setCountryCode(CatCountryBO countryCode) {
		this.countryCode = countryCode;
	}
	//20180614_thenv_End

	//20180831_tudn_start cap nhat trang thai
	private Long active;

	@Column(name = "ACTIVE", precision = 22, scale = 0)
//	@Transient
	public Long getActive() {
		return active;
	}

	public void setActive(Long active) {
		this.active = active;
	}
	//20180831_tudn_end cap nhat trang thai

	/*20190115_hoangnd_them thi truong_start*/
	private String nodeCountry;

	@Transient
	public String getNodeCountry() {
		if(this.nodeCode != null)
			return this.nodeCode + " - " + (this.countryCode != null ? this.countryCode.getCountryCode() : "null");
		else
			return nodeCountry;
	}

	public void setNodeCountry(String nodeCountry) {
		this.nodeCountry = nodeCountry;
	}
	/*20190115_hoangnd_them thi truong_end*/

    public Node() {
    }

//	public Node(Long nodeId) {
//		this.nodeId = nodeId;
//	}
//
//	public Node(Long nodeId, Vendor vendor, NodeType nodeType, String nodeCode, String nodeIp, List<NodeRun> nodeRuns) {
//		this.nodeId = nodeId;
//		this.vendor = vendor;
//		this.nodeType = nodeType;
//		this.nodeCode = nodeCode;
//		this.nodeIp = nodeIp;
//		this.nodeRuns = nodeRuns;
//	}

    @Id
    @Column(name = "NODE_ID", unique = true, nullable = false, precision = 22, scale = 0)
    @GeneratedValue(strategy = SEQUENCE, generator = "generator")
    @SequenceGenerator(name = "generator", sequenceName = "NODE_SEQ", allocationSize = 1)
    public Long getNodeId() {
        return this.nodeId;
    }

    public void setNodeId(Long nodeId) {
        this.nodeId = nodeId;
    }

	@ManyToOne(fetch = FetchType.EAGER)
	@LazyCollection(LazyCollectionOption.EXTRA)
	@JoinColumn(name = "VENDOR_ID")
	public Vendor getVendor() {
		return this.vendor;
	}

	public void setVendor(Vendor vendor) {
		this.vendor = vendor;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@LazyCollection(LazyCollectionOption.EXTRA)
	@JoinColumn(name = "NODE_TYPE_ID")
	public NodeType getNodeType() {
		return this.nodeType;
	}

	public void setNodeType(NodeType nodeType) {
		this.nodeType = nodeType;
	}

	@Column(name = "NODE_CODE", length = 200)
	public String getNodeCode() {
		return this.nodeCode;
	}

    public void setNodeCode(String nodeCode) {
        this.nodeCode = nodeCode;
    }

    @Column(name = "NODE_IP", length = 200)
    public String getNodeIp() {
        return this.nodeIp;
    }

    public void setNodeIp(String nodeIp) {
        this.nodeIp = nodeIp;
    }

	@Transient
	public List<ActionOfFlow> getActionOfFlows() {
		return actionOfFlows;
	}

	public void setActionOfFlows(List<ActionOfFlow> actionOfFlows) {
		this.actionOfFlows = actionOfFlows;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((nodeId == null) ? 0 : nodeId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Node other = (Node) obj;
		if (nodeId == null) {
			if (other.nodeId != null)
				return false;
		} else if (!nodeId.equals(other.nodeId))
			return false;
		return true;
	}

	@Transient
	public List<GroupAction> getGroupActions() {
//		if(groupActions.size()==0)
//			System.err.println();
		return groupActions;
	}

	public void setGroupActions(List<GroupAction> groupActions) {
		this.groupActions = groupActions;
	}

		

	//@OneToMany(fetch = FetchType.EAGER, mappedBy = "node")
	//@LazyCollection(LazyCollectionOption.EXTRA)
//	@Transient
//	public List<NodeRun> getNodeRuns() {
//		return this.nodeRuns;
//	}
//
//	public void setNodeRuns(List<NodeRun> nodeRuns) {
//		this.nodeRuns = nodeRuns;
//	}
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "VERSION_ID")
	public Version getVersion() {
		return this.version;
	}

	public void setVersion(Version version) {
		this.version = version;
	}

	@Column(name="SUBNETWORK")
	public String getSubnetwork() {
		return subnetwork;
	}

	public void setSubnetwork(String subnetwork) {
		this.subnetwork = subnetwork;
	}

	@Column(name="NETWORK_TYPE")
	public String getNetworkType() {
		return networkType;
	}

	public void setNetworkType(String networkType) {
		this.networkType = networkType;
	}

	@Column(name="IS_LAB")
	public Integer getIsLab() {
		return isLab;
	}

	public void setIsLab(Integer isLab) {
		this.isLab = isLab;
	}

	@Column(name="PROVINCE_CODE")
	public String getProvinceCode() {
		return provinceCode;
	}

	public void setProvinceCode(String provinceCode) {
		this.provinceCode = provinceCode;
	}

	@Column(name="STATUS")
	public Long getStatus() {
		return status;
	}

	public void setStatus(Long status) {
		this.status = status;
	}

	@Column(name="NODE_NAME")
	public String getNodeName() {
		return nodeName;
	}

	public void setNodeName(String nodeName) {
		this.nodeName = nodeName;
	}

	@Transient
	public String getFlag() {
		return flag;
	}

	public void setFlag(String flag) {
		this.flag = flag;
	}

	@Transient
	public List<String> getLstInterface() {
		return lstInterface;
	}

	public void setLstInterface(List<String> lstInterface) {
		this.lstInterface = lstInterface;
	}

	@Column(name="STATION_CODE")
	public String getStationCode() {
		return stationCode;
	}

	public void setStationCode(String stationCode) {
		this.stationCode = stationCode;
	}

	@Column(name="DEPARTMENT_NAME")
	public String getDepartmentName() {
		return departmentName;
	}

	public void setDepartmentName(String departmentName) {
		this.departmentName = departmentName;
	}
        
        @Column(name = "JDBC_URL")
        public String getJdbcUrl() {
            return jdbcUrl;
        }

        public void setJdbcUrl(String jdbcUrl) {
            this.jdbcUrl = jdbcUrl;
        }

        @Column(name = "PORT")
        public Integer getPort() {
            return port;
        }

        public void setPort(Integer port) {
            this.port = port;
        }

        @Column(name = "OS_TYPE")
        public String getOsType() {
            return osType;
        }

        public void setOsType(String osType) {
            this.osType = osType;
        }

    @Column(name = "EFFECT_IP")
    public String getEffectIp() {
        return effectIp;
    }

    public void setEffectIp(String effectIp) {
        this.effectIp = effectIp;
    }

    @Column(name = "SERVER_ID", precision = 22, scale = 0)
	public Long getServerId() {
		return serverId;
	}

	public void setServerId(Long serverId) {
		this.serverId = serverId;
	}

	@Column(name = "IT_BUSINESS_NODE", precision = 22, scale = 0)
	public Long getItBusinessNode() {
		return itBusinessNode;
	}

	public void setItBusinessNode(Long itBusinessNode) {
		this.itBusinessNode = itBusinessNode;
	}

	@Transient
	public NodeAccount getNodeAccount() {
		return nodeAccount;
	}

	public void setNodeAccount(NodeAccount nodeAccount) {
		this.nodeAccount = nodeAccount;
	}

	@Transient
	public Boolean isNodeLab() {
		return isNodeLab;
	}

	public void setNodeLab(Boolean isNodeLab) {
		this.isNodeLab = isNodeLab;
	}

	@Column(name = "SERVICE_NAME", length = 200)
	public String getServiceName() {
		return serviceName;
	}

	public void setServiceName(String serviceName) {
		this.serviceName = serviceName;
	}

	@Column(name = "NODE_IP_VIRTUAL", length = 200)
	public String getNodeIpVirtual() {
		return nodeIpVirtual;
	}

	public void setNodeIpVirtual(String nodeIpVirtual) {
		this.nodeIpVirtual = nodeIpVirtual;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "IMPACT_TIME", length = 7)
	public Date getImpactTime() {
		return impactTime;
	}

	public void setImpactTime(Date impactTime) {
		this.impactTime = impactTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ADD_PAR_TIME", length = 7)
	public Date getAddParTime() {
		return addParTime;
	}

	public void setAddParTime(Date addParTime) {
		this.addParTime = addParTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ADD_TBS_TIME", length = 7)
	public Date getAddTbsTime() {
		return addTbsTime;
	}

	public void setAddTbsTime(Date addTbsTime) {
		this.addTbsTime = addTbsTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ADD_DATAFILE_TIME", length = 7)
	public Date getAddDatafileTime() {
		return addDatafileTime;
	}

	public void setAddDatafileTime(Date addDatafileTime) {
		this.addDatafileTime = addDatafileTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DROP_PAR_TIME", length = 7)
	public Date getDropParTime() {
		return dropParTime;
	}

	public void setDropParTime(Date dropParTime) {
		this.dropParTime = dropParTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "RESIZE_TBS_TIME", length = 7)
	public Date getResizeTbsTime() {
		return resizeTbsTime;
	}

	public void setResizeTbsTime(Date resizeTbsTime) {
		this.resizeTbsTime = resizeTbsTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "EXPORT_TBS_TIME", length = 7)
	public Date getExportTbsTime() {
		return exportTbsTime;
	}

	public void setExportTbsTime(Date exportTbsTime) {
		this.exportTbsTime = exportTbsTime;
	}

	@Column(name = "DB_NODE_ID", precision = 22, scale = 0)
	public Long getDbNodeId() {
		return dbNodeId;
	}

	public void setDbNodeId(Long dbNodeId) {
		this.dbNodeId = dbNodeId;
	}

	@Column(name = "USER_MANAGER", length = 200)
	public String getUserManager() {
		return userManager;
	}

	public void setUserManager(String userManager) {
		this.userManager = userManager;
	}

	@Transient
	public List<TbsNodeObj> getLstTbsObj() {
		return lstTbsObj;
	}

	public void setLstTbsObj(List<TbsNodeObj> lstTbsObj) {
		this.lstTbsObj = lstTbsObj;
	}

	@Override
	public String toString() {
		return "Node{" +
				"nodeId=" + nodeId +
				", nodeCode='" + nodeCode + '\'' +
				", nodeIp='" + nodeIp + '\'' +
				", jdbcUrl='" + jdbcUrl + '\'' +
				", port=" + port +
				", osType='" + osType + '\'' +
				", subnetwork='" + subnetwork + '\'' +
				", networkType='" + networkType + '\'' +
				", isLab=" + isLab +
				", provinceCode='" + provinceCode + '\'' +
				", status=" + status +
				", nodeName='" + nodeName + '\'' +
				", serviceName='" + serviceName + '\'' +
				", nodeIpVirtual='" + nodeIpVirtual + '\'' +
				", impactTime=" + impactTime +
				", addParTime=" + addParTime +
				", addTbsTime=" + addTbsTime +
				", dbNodeId=" + dbNodeId +
				", userManager='" + userManager + '\'' +
				", itBusinessNode=" + itBusinessNode +
				", stationCode='" + stationCode + '\'' +
				", departmentName='" + departmentName + '\'' +
				", effectIp='" + effectIp + '\'' +
				", serverId=" + serverId +
				'}';
	}
}
