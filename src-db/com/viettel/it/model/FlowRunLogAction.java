package com.viettel.it.model;

// Generated Sep 27, 2016 11:33:18 AM by Hibernate Tools 4.0.0

import com.viettel.it.persistence.FlowRunLogActionServiceImpl;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import javax.persistence.*;
import java.util.Date;
import java.util.List;

/**
 * FlowRunLogAction generated by hbm2java
 */
@Entity
@Table(name = "FLOW_RUN_LOG_ACTION")
public class FlowRunLogAction implements java.io.Serializable {
	private static Logger logger = LogManager.getLogger(FlowRunLogAction.class);

	private Long runLogActionId;
	private Long flowRunLogId;
	private ActionOfFlow actionOfFlow;
	private Long cloneNumber;
	private Date startTime;
	private Date finishTime;
	private String username;
	private Long type;
	private Node node;
	private Long result;
	private Long cloneTotal;
    private Long actionOfFlowId;
    private Long nodeId;

	public FlowRunLogAction() {
	}

//	public FlowRunLogAction(Long runLogActionId, Long flowRunLogId, Long actionOfFlowId, Long cloneNumber, Long type, Long nodeId, Long cloneTotal) {
//		this.runLogActionId = runLogActionId;
//		this.flowRunLogId = flowRunLogId;
//		this.actionOfFlowId = actionOfFlowId;
//		this.cloneNumber = cloneNumber;
//		this.type = type;
//		this.nodeId = nodeId;
//		this.cloneTotal = cloneTotal;
//	}
//
//	public FlowRunLogAction(Long runLogActionId, Long flowRunLogId, Long actionOfFlowId, Long cloneNumber, Date startTime, Date finishTime, String username, Long type, Long nodeId, Long result,
//			Long cloneTotal) {
//		this.runLogActionId = runLogActionId;
//		this.flowRunLogId = flowRunLogId;
//		this.actionOfFlowId = actionOfFlowId;
//		this.cloneNumber = cloneNumber;
//		this.startTime = startTime;
//		this.finishTime = finishTime;
//		this.username = username;
//		this.type = type;
//		this.nodeId = nodeId;
//		this.result = result;
//		this.cloneTotal = cloneTotal;
//	}

	@Id
	@Column(name = "RUN_LOG_ACTION_ID", unique = true, nullable = false, precision = 20, scale = 0)
	public Long getRunLogActionId() {
		return this.runLogActionId;
	}

	public void setRunLogActionId(Long runLogActionId) {
		this.runLogActionId = runLogActionId;
	}

	@Column(name = "FLOW_RUN_LOG_ID", nullable = false, precision = 20, scale = 0)
	public Long getFlowRunLogId() {
		return this.flowRunLogId;
	}

	public void setFlowRunLogId(Long flowRunLogId) {
		this.flowRunLogId = flowRunLogId;
	}

//        @Fetch(FetchMode.SELECT)
//        @ManyToOne(optional = true, cascade = CascadeType.MERGE)
//        @JoinColumn(name = "ACTION_OF_FLOW_ID", insertable = false, updatable = false)
        @Transient
        public ActionOfFlow getActionOfFlow() {
            return actionOfFlow;
        }

        public void setActionOfFlow(ActionOfFlow actionOfFlow) {
            this.actionOfFlow = actionOfFlow;
        }
        
        @Column(name = "ACTION_OF_FLOW_ID", nullable = false, precision = 20, scale = 0)
	public Long getActionOfFlowId() {
		return this.actionOfFlowId;
        }
        
        public void setActionOfFlowId(Long actionOfFlowId) {
		this.actionOfFlowId = actionOfFlowId;
        }

	@Column(name = "CLONE_NUMBER", nullable = false, precision = 5, scale = 0)
	public Long getCloneNumber() {
		return this.cloneNumber;
	}

	public void setCloneNumber(Long cloneNumber) {
		this.cloneNumber = cloneNumber;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "START_TIME", length = 7)
	public Date getStartTime() {
		return this.startTime;
	}

	public void setStartTime(Date startTime) {
		this.startTime = startTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FINISH_TIME", length = 7)
	public Date getFinishTime() {
		return this.finishTime;
	}

	public void setFinishTime(Date finishTime) {
		this.finishTime = finishTime;
	}

	@Column(name = "USERNAME", length = 200)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "TYPE", nullable = false, precision = 1, scale = 0)
	public Long getType() {
		return this.type;
	}

	public void setType(Long type) {
		this.type = type;
	}

        @Transient
        public Node getNode() {
            return node;
        }

        public void setNode(Node node) {
            this.node = node;
        }
        
        @Column(name = "NODE_ID", nullable = false, precision = 20, scale = 0)
	public Long getNodeId() {
		return this.nodeId;
        }
        
        public void setNodeId(Long nodeId) {
		this.nodeId = nodeId;
	}

	@Column(name = "RESULT", precision = 1, scale = 0)
	public Long getResult() {
		return this.result;
	}

	public void setResult(Long result) {
		this.result = result;
	}

	@Column(name = "CLONE_TOTAL", nullable = false, precision = 5, scale = 0)
	public Long getCloneTotal() {
		return this.cloneTotal;
	}

	public void setCloneTotal(Long cloneTotal) {
		this.cloneTotal = cloneTotal;
	}

        public FlowRunLogAction(FlowRunLogAction flowRunLogAction, ActionOfFlow actionOfFlow, Node node) {
            this.actionOfFlow = actionOfFlow;
            this.node = node;
            this.cloneNumber = flowRunLogAction.cloneNumber;
            this.cloneTotal = flowRunLogAction.cloneTotal;
            this.finishTime = flowRunLogAction.finishTime;
            this.flowRunLogId = flowRunLogAction.flowRunLogId;
            this.result = flowRunLogAction.result;
            this.runLogActionId = flowRunLogAction.runLogActionId;
            this.startTime = flowRunLogAction.startTime;
            this.type = flowRunLogAction.type;
            this.username = flowRunLogAction.username;
            this.actionOfFlowId = flowRunLogAction.actionOfFlowId;
            this.nodeId = flowRunLogAction.nodeId;
        }
        
        public static void main(String[] args) {
            try {
                String hql = "select new FlowRunLogAction(flowRunLogAction, actionOfFlow, node) from FlowRunLogAction as flowRunLogAction"
                        + " left join ActionOfFlow as actionOfFlow on flowRunLogAction.actionOfFlowId = actionOfFlow.stepNum"
                        + " left join Node as node on flowRunLogAction.nodeId = node.nodeId"
                        + " where flowRunLogAction.type = 1 and flowRunLogAction.flowRunLogId = ?"
                        + " order by node.nodeId, actionOfFlow.stepNumberLabel, flowRunLogAction.cloneNumber";
                List<FlowRunLogAction> a = new FlowRunLogActionServiceImpl().findList(hql, -1, -1, 122974l);
                System.out.println(a.size());
            } catch (Exception e) {
                logger.error(e.getMessage(), e);
            }
        }
                
                
}
