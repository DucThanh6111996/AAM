package com.viettel.it.model;

// Generated Sep 8, 2016 5:07:30 PM by Hibernate Tools 4.0.0

import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;

import javax.persistence.*;
import java.util.Date;

import static javax.persistence.GenerationType.SEQUENCE;

/**
 * ParamValue generated by hbm2java
 */
@Entity
@Table(name = "PARAM_VALUE")
public class ParamValue implements java.io.Serializable {

	private Long paramValueId;
//	private FlowRunAction flowRunAction;
	private ParamInput paramInput;
	private String paramCode;
	private Date createTime;
	private String paramValue;

	private Long groupCode;
	private NodeRun nodeRun;

	private String paramValueDisplay;

	private String description;
	private String formula;
	private boolean disableByInOut; //Neu tat ca cac lenh cua tham so deu la tham chieu thi se disable
	private boolean isDeclare;

	private Long paramInputId;
	private Long nodeId;

	@Transient
	public boolean isDisableByInOut() {
		return disableByInOut;
	}

	public void setDisableByInOut(boolean disableByInOut) {
		this.disableByInOut = disableByInOut;
	}

	public ParamValue() {
	}

	public ParamValue(Long paramValueId, ParamInput paramInput, String paramCode, Date createTime) {
		this.paramValueId = paramValueId;
		this.paramInput = paramInput;
		this.paramCode = paramCode;
		this.createTime = createTime;
	}
	
	public ParamValue(ParamInput paramInput, String paramCode, Date createTime,
                      String paramValue, NodeRun nodeRun) {
		super();
		this.paramInput = paramInput;
		this.paramCode = paramCode;
		this.createTime = createTime;
		this.paramValue = paramValue;
		this.nodeRun = nodeRun;
	}

	@Id
	@Column(name = "PARAM_VALUE_ID", unique = true, nullable = false, precision = 22, scale = 0)
	@GeneratedValue(strategy = SEQUENCE, generator = "generator")
    @SequenceGenerator(name = "generator", sequenceName = "PARAM_VALUE_SEQ", allocationSize = 1)
	public Long getParamValueId() {
		return this.paramValueId;
	}

	public void setParamValueId(Long paramValueId) {
		this.paramValueId = paramValueId;
	}

//	@ManyToOne(fetch = FetchType.EAGER)
//	@JoinColumn(name = "FLOW_RUN_ID")
//	public FlowRunAction getFlowRunAction() {
//		return this.flowRunAction;
//	}
//
//	public void setFlowRunAction(FlowRunAction flowRunAction) {
//		this.flowRunAction = flowRunAction;
//	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "PARAM_INPUT_ID", nullable = false)
	public ParamInput getParamInput() {
		return this.paramInput;
	}

	public void setParamInput(ParamInput paramInput) {
		this.paramInput = paramInput;
	}

	@Column(name = "PARAM_CODE", nullable = false, length = 100)
	public String getParamCode() {
		return this.paramCode;
	}

	public void setParamCode(String paramCode) {
		this.paramCode = paramCode;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATE_TIME", nullable = false, length = 7)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Column(name = "PARAM_VALUE")
	public String getParamValue() {
		return this.paramValue;
	}

	public void setParamValue(String paramValue) {
		this.paramValue = paramValue;
	}

	@Transient
	public Long getGroupCode() {
		return groupCode;
	}

	public void setGroupCode(Long groupCode) {
		this.groupCode = groupCode;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@LazyCollection(LazyCollectionOption.EXTRA)
	@JoinColumns({ @JoinColumn(name = "NODE_ID", referencedColumnName = "NODE_ID"),
		@JoinColumn(name = "FLOW_RUN_ID", referencedColumnName = "FLOW_RUN_ID") })
	public NodeRun getNodeRun() {
		return this.nodeRun;
	}

	public void setNodeRun(NodeRun nodeRun) {
		this.nodeRun = nodeRun;
	}

	@Transient
    public String getParamValueDisplay() {
        return paramValueDisplay;
    }

    public void setParamValueDisplay(String paramValueDisplay) {
        this.paramValueDisplay = paramValueDisplay;
    }

	@Transient
	public boolean isIsFormula() {
		return formula != null && !formula.trim().isEmpty();
	}

	@Transient
	public boolean isIsDescription() {
		return description != null && !description.trim().isEmpty();
	}

	@Transient
	public String getFormula() {
		return formula;
	}

	public void setFormula(String formula) {
		this.formula = formula;
	}

	@Transient
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Transient
	public boolean isIsDeclare() {
		return isDeclare;
	}

	public void setIsDeclare(boolean isDeclare) {
		this.isDeclare = isDeclare;
	}

	@Transient
	public Long getParamInputId() {
		return paramInputId;
	}

	public void setParamInputId(Long paramInputId) {
		this.paramInputId = paramInputId;
	}

	@Transient
	public Long getNodeId() {
		return nodeId;
	}

	public void setNodeId(Long nodeId) {
		this.nodeId = nodeId;
	}

	@Override
	public String toString() {
		return "ParamValue [" + (paramCode != null ? "paramCode=" + paramCode + ", " : "") + (paramValue != null ? "paramValue=" + paramValue : "") + "]";
	}
	
}
