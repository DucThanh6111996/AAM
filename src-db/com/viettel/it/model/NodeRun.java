package com.viettel.it.model;

// Generated Sep 8, 2016 5:07:30 PM by Hibernate Tools 4.0.0

import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;

import javax.persistence.*;
import java.util.ArrayList;
import java.util.List;

/**
 * NodeRun generated by hbm2java
 */
@Entity
@Table(name = "NODE_RUN")
public class NodeRun implements java.io.Serializable {

	private NodeRunId id;
	private FlowRunAction flowRunAction;
	private Node node;
	private List<NodeRunGroupAction> nodeRunGroupActions = new ArrayList<NodeRunGroupAction>(0);
	private List<ParamValue> paramValues = new ArrayList<>(0);

	public NodeRun() {
	}

	public NodeRun(NodeRunId id, FlowRunAction flowRunAction, Node node) {
		this.id = id;
		this.flowRunAction = flowRunAction;
		this.node = node;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "nodeId", column = @Column(name = "NODE_ID", nullable = false, precision = 22, scale = 0)),
			@AttributeOverride(name = "flowRunId", column = @Column(name = "FLOW_RUN_ID", nullable = false, precision = 22, scale = 0)) })
	public NodeRunId getId() {
		return this.id;
	}

	public void setId(NodeRunId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "FLOW_RUN_ID", nullable = false, insertable = false, updatable = false)
	public FlowRunAction getFlowRunAction() {
		return this.flowRunAction;
	}

	public void setFlowRunAction(FlowRunAction flowRunAction) {
		this.flowRunAction = flowRunAction;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "NODE_ID", nullable = false, insertable = false, updatable = false)
	public Node getNode() {
		return this.node;
	}

	public void setNode(Node node) {
		this.node = node;
	}
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "nodeRun")
	@LazyCollection(LazyCollectionOption.EXTRA)
	public List<NodeRunGroupAction> getNodeRunGroupActions() {
		return this.nodeRunGroupActions;
	}

	public void setNodeRunGroupActions(List<NodeRunGroupAction> nodeRunGroupActions) {
		this.nodeRunGroupActions = nodeRunGroupActions;
	}
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "nodeRun")
	@LazyCollection(LazyCollectionOption.EXTRA)
	public List<ParamValue> getParamValues() {
		return this.paramValues ;
	}

	public void setParamValues(List<ParamValue> paramValues) {
		this.paramValues = paramValues;
	}
}
