package com.viettel.it.model;

// Generated Sep 8, 2016 5:07:30 PM by Hibernate Tools 4.0.0

import com.viettel.it.persistence.AutoConfNodeTemServiceImpl;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;

import javax.persistence.*;
import java.util.ArrayList;
import java.util.List;

import static javax.persistence.GenerationType.SEQUENCE;

/**
 * ActionDetail generated by hbm2java
 */
@Entity
@Table(name = "AUTO_CONFIG_NODE_TEMPLATE")
public class AutoConfigNodeTemplate implements java.io.Serializable {

	private Long id;
	private Long flowTemplateId;
	private Integer type;
	private String nocproLabelField;

    public AutoConfigNodeTemplate() {
    }

	@Id
	@Column(name = "ID", unique = true, nullable = false, precision = 12, scale = 0)
	@GeneratedValue(strategy = SEQUENCE, generator = "generator")
    @SequenceGenerator(name = "generator", sequenceName = "AUTO_CONFIG_NODE_TEMPLATE_SEQ", allocationSize = 1)
	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "FLOW_TEMPLATE_ID", unique = true, nullable = false, precision = 12, scale = 0)
	public Long getFlowTemplateId() {
		return flowTemplateId;
	}

	public void setFlowTemplateId(Long flowTemplateId) {
		this.flowTemplateId = flowTemplateId;
	}

	@Column(name = "TYPE", unique = true, nullable = false, precision = 4, scale = 0)
	public Integer getType() {
		return type;
	}

	public void setType(Integer type) {
		this.type = type;
	}

	@Column(name = "NOCPRO_LABEL_FIELD", length = 200)
	public String getNocproLabelField() {
		return nocproLabelField;
	}

	public void setNocproLabelField(String nocproLabelField) {
		this.nocproLabelField = nocproLabelField;
	}

	@Override
	public boolean equals(Object o) {
		if (this == o) return true;
		if (o == null || getClass() != o.getClass()) return false;

		AutoConfigNodeTemplate that = (AutoConfigNodeTemplate) o;

		if (!id.equals(that.id)) return false;
		if (!flowTemplateId.equals(that.flowTemplateId)) return false;
		if (!type.equals(that.type)) return false;
		return nocproLabelField.equals(that.nocproLabelField);
	}

	@Override
	public int hashCode() {
		int result = id.hashCode();
		result = 31 * result + flowTemplateId.hashCode();
		result = 31 * result + type.hashCode();
		result = 31 * result + nocproLabelField.hashCode();
		return result;
	}

	public static void main(String args[]) {
    	try {

    		List<AutoConfigNodeTemplate> nodeTemplates = new AutoConfNodeTemServiceImpl().findList();
    		System.out.println(nodeTemplates.size());

		} catch (Exception e) {
    		e.printStackTrace();
		}
	}
}